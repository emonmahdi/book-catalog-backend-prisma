// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @unique @default(uuid())
  name       String
  email      String   @unique
  password   String
  role       UserRole @default(customer)
  contactNo  String   @unique @map("contact_no")
  address    String
  profileImg String   @map("profile_img")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at")
  orders     Order[]

  @@map("users")
}

model Category {
  id        String   @id @unique @default(uuid())
  title     String
  books     Book[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("categories")
}

model Book {
  id              String        @id @unique @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate String        @map("publication_date")
  categoryId      String        @map("category_id")
  category        Category      @relation(fields: [categoryId], references: [id])
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @default(now()) @updatedAt @map("updated_at")
  orderedBooks    OrderedBook[]

  @@map("books")
}

model Order {
  id           String        @id @unique @default(uuid())
  userId       String        @map("user_id")
  user         User          @relation(fields: [userId], references: [id])
  status       OrderStatus   @default(pending)
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @default(now()) @updatedAt @map("updated_at")
  orderedBooks OrderedBook[]

  @@map("orders")
}

model OrderedBook {
  id        String   @id @unique @default(uuid())
  orderId   String   @map("order_id")
  order     Order    @relation(fields: [orderId], references: [id])
  bookId    String   @map("book_id")
  book      Book     @relation(fields: [bookId], references: [id])
  quantity  Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("ordered_books")
}

enum OrderStatus {
  pending
  shipped
  delivered
}

enum UserRole {
  admin
  customer
}
